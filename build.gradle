plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.4.0.2513'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
sonarqube {
	properties {
		property "sonar.projectKey", "maduran13_example-sonar"
		property "sonar.organization", "maduran13"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.exclusions", "**src/main/java/com/example/demo/controller/**"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	executionData tasks.withType(Test)
	classDirectories.from = files(sourceSets.main.output.classesDirs)
	sourceDirectories.from = files(sourceSets.main.java.srcDirs)

	reports {
		xml.enabled true
	}
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}

tasks.named('test') {
	useJUnitPlatform()
}
